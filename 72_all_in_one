from itertools import permutations

perm = list(permutations([2,3,4,5,6,7,8,9,10,11,12,13,14]))
res = []
goodlists = []
def permsift(perm):
    for lst in perm:
        x = 0
        # print(lst)
        lst = list(lst)
        res = []
        mini = []
        for i in range(len(lst)):
            if i < len(lst) -1:
                if abs(lst[i + 1] - lst[i]) > 7:
                    x +=1
                mini.append((lst[i + 1] - lst[i]))
            if i == len(lst) - 1:
                if abs(lst[i] - lst[0]) > 7:
                    x += 1
                mini.append(lst[i] - lst[0])
        if len(mini) == 13:
            res = (list(lst))
        # print(res)
        for el in range(len(res)): #here is rotated perms
            while res[0] != 2:
                res.append(res.pop(el))
        # print(res)
        newlist = [1, 1]
        sequences = []
        for i in range(1, len(res) - 1):
            if i < len(res) -1:
                newlist.append(res[i] - newlist[-1])
            else:
                 newlist.append(res[0] - newlist[-1])
            if len(newlist) == 13:
                sequences = newlist
        # print(sequences)
        for i in range(len(sequences)):
            if sequences[i] < 1 or sequences[i] > 7:
                x +=1
        for i in range(len(sequences)):
            # print(sequences)
            sequences.append(sequences.pop(0))
        if len(sequences) >= 2:
            while sequences[0] + sequences[1] > 2:
                sequences.append(sequences.pop(0))
            # print(sequences)
        if sequences not in goodlists and sum(sequences) == 52 and x == 0:
            goodlists.append(sequences)
        # print('first')
    return goodlists

print((permsift(perm)))
